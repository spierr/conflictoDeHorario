/* ========================================================================
 * Copyright 2014 horario
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 horario

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.horario.curso.master.persistence.entity;

import co.edu.uniandes.csw.horario.seccion.persistence.entity.SeccionEntity;
import co.edu.uniandes.csw.horario.curso.persistence.entity.CursoEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(Cursoseccion_cursEntityId.class)
@NamedQueries({
    @NamedQuery(name = "Cursoseccion_cursEntity.getByMasterId", query = "SELECT  u FROM Cursoseccion_cursEntity u WHERE u.cursoId=:cursoId"),
    @NamedQuery(name = "Cursoseccion_cursEntity.deleteCursoseccion_cursEntity", query = "DELETE FROM Cursoseccion_cursEntity u WHERE u.cursoId=:cursoId and  u.seccion_cursId=:seccion_cursId")
})
public class Cursoseccion_cursEntity implements Serializable {

    @Id
    @Column(name = "cursoId")
    private Long cursoId;
    @Id
    @Column(name = "seccion_cursId")
    private Long seccion_cursId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "cursoId", referencedColumnName = "id")
    @JoinFetch
    private SeccionEntity cursoIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "seccion_cursId", referencedColumnName = "id")
    @JoinFetch
    private SeccionEntity seccion_cursIdEntity; 

    public Cursoseccion_cursEntity() {
    }

    public Cursoseccion_cursEntity(Long cursoId, Long seccion_cursId) {
        this.cursoId =cursoId;
        this.seccion_cursId = seccion_cursId;
    }

    public Long getCursoId() {
        return cursoId;
    }

    public void setCursoId(Long cursoId) {
        this.cursoId = cursoId;
    }

    public Long getSeccion_cursId() {
        return seccion_cursId;
    }

    public void setSeccion_cursId(Long seccion_cursId) {
        this.seccion_cursId = seccion_cursId;
    }

    public SeccionEntity getCursoIdEntity() {
        return cursoIdEntity;
    }

    public void setCursoIdEntity(SeccionEntity cursoIdEntity) {
        this.cursoIdEntity = cursoIdEntity;
    }

    public SeccionEntity getSeccion_cursIdEntity() {
        return seccion_cursIdEntity;
    }

    public void setSeccion_cursIdEntity(SeccionEntity seccion_cursIdEntity) {
        this.seccion_cursIdEntity = seccion_cursIdEntity;
    }

}
